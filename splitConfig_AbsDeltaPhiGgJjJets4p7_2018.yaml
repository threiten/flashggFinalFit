splits: 
  genAbsDeltaPhiGgJjJets4p7: [0.0,2.0,2.7,2.95,3.07,3.2]
  recoAbsDeltaPhiGgJjJets4p7: [0.0,2.0,2.7,2.95,3.07,3.2]
  sigmaMoM_decorr: [0.0, 0.01076, 0.0165, 0.0332]
   
variables: 
  CMS_hgg_mass: [100, 180]
  weight: [-inf, inf]

nominalVariables:
  centralObjectWeight: [-1000, 1000]
  dZ: [-inf, inf]
  processIndex: [0,100]

cut: 'leadmva>0.46 and subleadmva>0.46'

phasespace:
  gen: 'genJet4p7Px0>-999 and genJet4p7Px1>-999 and genJet4p7Pt0>30 and genJet4p7Pt1>30 and abs(genJet4p7Eta0)<4.7 and abs(genJet4p7Eta1)<4.7'
  reco: 'recoJet4p7Px0>-999 and recoJet4p7Px1>-999 and recoJet4p7Pt0>30 and recoJet4p7Pt1>30 and abs(recoJet4p7Eta0)<4.7 and abs(recoJet4p7Eta1)<4.7'

weight: 'weight'

systVars: ['PreselSF','electronVetoSF','TriggerWeight','FracRVWeight','ElectronIDWeight','ElectronRecoWeight','JetBTagCutWeight']

theoryWeights :
  pdfWeights: 60
  alphaSWeights: 2
  scaleWeights: 9

procs:
  IA_125: 'InsideAcceptance_125_13TeV'
  OA_125: 'OutsideAcceptance_125_13TeV'
  IA_120: 'InsideAcceptance_120_13TeV'
  OA_120: 'OutsideAcceptance_120_13TeV'
  IA_130: 'InsideAcceptance_130_13TeV'
  OA_130: 'OutsideAcceptance_130_13TeV'
  Data: 'Data_13TeV'
  
categories: ['SigmaMpTTag_0', 'SigmaMpTTag_0_FNUFEBDown01sigma', 'SigmaMpTTag_0_FNUFEBUp01sigma', 'SigmaMpTTag_0_FNUFEEDown01sigma', 'SigmaMpTTag_0_FNUFEEUp01sigma', 'SigmaMpTTag_0_JECAbsolute2018Down01sigma', 'SigmaMpTTag_0_JECAbsolute2018Up01sigma', 'SigmaMpTTag_0_JECAbsoluteDown01sigma', 'SigmaMpTTag_0_JECAbsoluteUp01sigma', 'SigmaMpTTag_0_JECBBEC12018Down01sigma', 'SigmaMpTTag_0_JECBBEC12018Up01sigma', 'SigmaMpTTag_0_JECBBEC1Down01sigma', 'SigmaMpTTag_0_JECBBEC1Up01sigma', 'SigmaMpTTag_0_JECDown01sigma', 'SigmaMpTTag_0_JECEC22018Down01sigma', 'SigmaMpTTag_0_JECEC22018Up01sigma', 'SigmaMpTTag_0_JECEC2Up01sigma', 'SigmaMpTTag_0_JECEC2Down01sigma', 'SigmaMpTTag_0_JECFlavorQCDDown01sigma', 'SigmaMpTTag_0_JECFlavorQCDUp01sigma', 'SigmaMpTTag_0_JECHF2018Down01sigma', 'SigmaMpTTag_0_JECHFDown01sigma', 'SigmaMpTTag_0_JECHF2018Up01sigma', 'SigmaMpTTag_0_JECHFUp01sigma', 'SigmaMpTTag_0_JECRelativeBalDown01sigma', 'SigmaMpTTag_0_JECRelativeSample2018Down01sigma', 'SigmaMpTTag_0_JECRelativeBalUp01sigma', 'SigmaMpTTag_0_JECRelativeSample2018Up01sigma', 'SigmaMpTTag_0_JECUp01sigma', 'SigmaMpTTag_0_JERDown01sigma', 'SigmaMpTTag_0_JERUp01sigma', 'SigmaMpTTag_0_JetHEMDown01sigma', 'SigmaMpTTag_0_JetHEMUp01sigma', 'SigmaMpTTag_0_MCScaleGain1EBDown01sigma', 'SigmaMpTTag_0_MCScaleGain1EBUp01sigma', 'SigmaMpTTag_0_MCScaleGain6EBDown01sigma', 'SigmaMpTTag_0_MCScaleGain6EBUp01sigma', 'SigmaMpTTag_0_MCScaleHighR9EBDown01sigma', 'SigmaMpTTag_0_MCScaleHighR9EBUp01sigma', 'SigmaMpTTag_0_MCScaleHighR9EEDown01sigma', 'SigmaMpTTag_0_MCScaleHighR9EEUp01sigma', 'SigmaMpTTag_0_MCScaleLowR9EBDown01sigma', 'SigmaMpTTag_0_MCScaleLowR9EBUp01sigma', 'SigmaMpTTag_0_MCScaleLowR9EEDown01sigma', 'SigmaMpTTag_0_MCScaleLowR9EEUp01sigma', 'SigmaMpTTag_0_MCSmearHighR9EBPhiDown01sigma', 'SigmaMpTTag_0_MCSmearHighR9EBPhiUp01sigma', 'SigmaMpTTag_0_MCSmearHighR9EBRhoDown01sigma', 'SigmaMpTTag_0_MCSmearHighR9EBRhoUp01sigma', 'SigmaMpTTag_0_MCSmearHighR9EEPhiDown01sigma', 'SigmaMpTTag_0_MCSmearHighR9EEPhiUp01sigma', 'SigmaMpTTag_0_MCSmearHighR9EERhoDown01sigma', 'SigmaMpTTag_0_MCSmearHighR9EERhoUp01sigma', 'SigmaMpTTag_0_MCSmearLowR9EBPhiDown01sigma', 'SigmaMpTTag_0_MCSmearLowR9EBPhiUp01sigma', 'SigmaMpTTag_0_MCSmearLowR9EBRhoDown01sigma', 'SigmaMpTTag_0_MCSmearLowR9EBRhoUp01sigma', 'SigmaMpTTag_0_MCSmearLowR9EEPhiDown01sigma', 'SigmaMpTTag_0_MCSmearLowR9EEPhiUp01sigma', 'SigmaMpTTag_0_MCSmearLowR9EERhoDown01sigma', 'SigmaMpTTag_0_MCSmearLowR9EERhoUp01sigma', 'SigmaMpTTag_0_MaterialCentralBarrelDown01sigma', 'SigmaMpTTag_0_MaterialCentralBarrelUp01sigma', 'SigmaMpTTag_0_MaterialForwardDown01sigma', 'SigmaMpTTag_0_MaterialForwardUp01sigma', 'SigmaMpTTag_0_MaterialOuterBarrelDown01sigma', 'SigmaMpTTag_0_MaterialOuterBarrelUp01sigma', 'SigmaMpTTag_0_MvaShiftDown01sigma', 'SigmaMpTTag_0_MvaShiftUp01sigma', 'SigmaMpTTag_0_PUJIDShiftDown01sigma', 'SigmaMpTTag_0_PUJIDShiftUp01sigma', 'SigmaMpTTag_0_ShowerShapeHighR9EBDown01sigma', 'SigmaMpTTag_0_ShowerShapeHighR9EBUp01sigma', 'SigmaMpTTag_0_ShowerShapeHighR9EEDown01sigma', 'SigmaMpTTag_0_ShowerShapeHighR9EEUp01sigma', 'SigmaMpTTag_0_ShowerShapeLowR9EBDown01sigma', 'SigmaMpTTag_0_ShowerShapeLowR9EBUp01sigma', 'SigmaMpTTag_0_ShowerShapeLowR9EEDown01sigma', 'SigmaMpTTag_0_ShowerShapeLowR9EEUp01sigma', 'SigmaMpTTag_0_SigmaEOverEShiftDown01sigma', 'SigmaMpTTag_0_SigmaEOverEShiftUp01sigma', 'SigmaMpTTag_0_metJecUncertaintyDown01sigma', 'SigmaMpTTag_0_metJecUncertaintyUp01sigma', 'SigmaMpTTag_0_metJerUncertaintyDown01sigma', 'SigmaMpTTag_0_metJerUncertaintyUp01sigma', 'SigmaMpTTag_0_metPhoUncertaintyDown01sigma', 'SigmaMpTTag_0_metPhoUncertaintyUp01sigma', 'SigmaMpTTag_0_metUncUncertaintyDown01sigma', 'SigmaMpTTag_0_metUncUncertaintyUp01sigma']

correlatedSyst: ['JEC', 'ScaleHighR9EB', 'ScaleHighR9EE', 'ScaleLowR9EB', 'ScaleLowR9EE', 'ScaleGain6EB', 'ScaleGain1EB', 'SmearHighR9EBPhi','SmearHighR9EBRho','SmearHighR9EEPhi','SmearHighR9EERho','SmearLowR9EBPhi','SmearLowR9EBRho','SmearLowR9EEPhi','SmearLowR9EERho', 'Material', 'NonLinearity', 'Geant4', 'LightYield', 'Absolute']

filenames:
  IA_125: 'reducedAbsDeltaPhiGgJjJets4p7IA_genAbsDeltaPhiGgJjJets4p7_nominal.root'
  OA_125: 'reducedAbsDeltaPhiGgJjJets4p7OA__nominal.root'
  IA_120: 'reducedAbsDeltaPhiGgJjJets4p7IA_genAbsDeltaPhiGgJjJets4p7_nominal.root'
  OA_120: 'reducedAbsDeltaPhiGgJjJets4p7OA__nominal.root'
  IA_130: 'reducedAbsDeltaPhiGgJjJets4p7IA_genAbsDeltaPhiGgJjJets4p7_nominal.root'
  OA_130: 'reducedAbsDeltaPhiGgJjJets4p7OA__nominal.root'
  Data: 'reducedAbsDeltaPhiGgJjJets4p7Data__nominal.root'
  
treepath: 'tagsDumper/trees'

formulas: 
  recoAbsDeltaPhiGgJjJets4p7: 'abs(@deltaPhi(recoPhi, @phi12(recoJet4p7Px0, recoJet4p7Py0, recoJet4p7Px1, recoJet4p7Py1)))'
  genAbsDeltaPhiGgJjJets4p7: 'abs(@deltaPhi(genPhi, @phi12(genJet4p7Px0, genJet4p7Py0, genJet4p7Px1, genJet4p7Py1)))'

functions:
  deltaPhi: "def deltaPhi(phi1, phi2):\n\t ret = phi1 - phi2\n\t ret[ret >= np.pi] = ret[ret >= np.pi] - 2*np.pi\n\t ret[ret < -np.pi] = ret[ret < -np.pi] + 2*np.pi\n\t return ret"
  phi12: "def phi12(x1, y1, x2, y2):\n\t return ((y1+y2)/abs(y1+y2)) * np.arccos((x1 + x2)/np.sqrt((x1+x2)**2 + (y1+y2)**2))"
