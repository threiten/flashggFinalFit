splits: 
  genAbsDeltaPhiGgJjJets4p7: [0.0,2.0,2.7,2.95,3.07,3.2]
  recoAbsDeltaPhiGgJjJets4p7: [0.0,2.0,2.7,2.95,3.07,3.2]
  sigmaMoM_decorr: [0.0, 0.01076, 0.0165, 0.0332]
  # absdZ: [0.0,1.0,100.]
 
variables: 
  CMS_hgg_mass: [100, 180]
  weight: [-inf, inf]
  centralObjectWeight: [-1000, 1000]
  dZ: [-inf, inf]
  processIndex: [0,100]

cut: 'leadmva>0.46 and subleadmva>0.46'

phasespace:
  gen: 'genJet4p7Px0>-999 and genJet4p7Px1>-999 and genJet4p7Pt0>30 and genJet4p7Pt1>30 and abs(genJet4p7Eta0)<4.7 and abs(genJet4p7Eta1)<4.7 and (abs(genJet4p7Eta0 - genJet4p7Eta1) > 3.5) and genMjjJets4p7>200'
  reco: 'recoJet4p7Px0>-999 and recoJet4p7Px1>-999 and recoJet4p7Pt0>30 and recoJet4p7Pt1>30 and abs(recoJet4p7Eta0)<4.7 and abs(recoJet4p7Eta1)<4.7 and (abs(recoJet4p7Eta0 - recoJet4p7Eta1) > 3.5) and recoMjjJets4p7>200'

weight: 'weight'

systVars: []

procs:
  IA_125: 'InsideAcceptance_125_13TeV'
  OA_125: 'OutsideAcceptance_125_13TeV'
  IA_120: 'InsideAcceptance_120_13TeV'
  OA_120: 'OutsideAcceptance_120_13TeV'
  IA_130: 'InsideAcceptance_130_13TeV'
  OA_130: 'OutsideAcceptance_130_13TeV'
  Data: 'Data_13TeV'
  
categories: ['SigmaMpTTag_0']

filenames:
  IA_125: 'reducedAbsDeltaPhiGgJjJets4p7IA_genAbsDeltaPhiGgJjJets4p7_nominal.root'
  OA_125: 'reducedAbsDeltaPhiGgJjJets4p7OA__nominal.root'
  IA_120: 'reducedAbsDeltaPhiGgJjJets4p7IA_genAbsDeltaPhiGgJjJets4p7_nominal.root'
  OA_120: 'reducedAbsDeltaPhiGgJjJets4p7OA__nominal.root'
  IA_130: 'reducedAbsDeltaPhiGgJjJets4p7IA_genAbsDeltaPhiGgJjJets4p7_nominal.root'
  OA_130: 'reducedAbsDeltaPhiGgJjJets4p7OA__nominal.root'
  Data: 'reducedAbsDeltaPhiGgJjJets4p7Data__nominal.root'
  
treepath: 'tagsDumper/trees'

formulas: 
  recoAbsDeltaPhiGgJjJets4p7: 'abs(@deltaPhi(recoPhi, @phi12(recoJet4p7Px0, recoJet4p7Py0, recoJet4p7Px1, recoJet4p7Py1)))'
  genAbsDeltaPhiGgJjJets4p7: 'abs(@deltaPhi(genPhi, @phi12(genJet4p7Px0, genJet4p7Py0, genJet4p7Px1, genJet4p7Py1)))'
  recoMjjJets4p7: 'sqrt((recoJet4p7Energy0 + recoJet4p7Energy1)**2 - (recoJet4p7Px0 + recoJet4p7Px1)**2  - (recoJet4p7Py0 + recoJet4p7Py1)**2  - (recoJet4p7Pz0 + recoJet4p7Pz1)**2)'
  genMjjJets4p7: 'sqrt((genJet4p7Energy0 + genJet4p7Energy1)**2 - (genJet4p7Px0 + genJet4p7Px1)**2  - (genJet4p7Py0 + genJet4p7Py1)**2  - (genJet4p7Pz0 + genJet4p7Pz1)**2)'


functions:
  deltaPhi: "def deltaPhi(phi1, phi2):\n\t ret = phi1 - phi2\n\t ret[ret >= np.pi] = ret[ret >= np.pi] - 2*np.pi\n\t ret[ret < -np.pi] = ret[ret < -np.pi] + 2*np.pi\n\t return ret"
  phi12: "def phi12(x1, y1, x2, y2):\n\t return ((y1+y2)/abs(y1+y2)) * np.arccos((x1 + x2)/np.sqrt((x1+x2)**2 + (y1+y2)**2))"
